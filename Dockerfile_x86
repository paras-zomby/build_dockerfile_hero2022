FROM openvino/ubuntu20:2021.4

ENV DEBIAN_FRONTEND=noninteractive

ENV HTTP_PROXY "http://127.0.0.1:7890" 
ENV HTTPS_PROXY "http://127.0.0.1:7890"

USER root
RUN apt-get -y remove gcc g++ && apt-get -y autoremove && apt-get -y update \
    && apt-get install -y apt-utils software-properties-common --fix-missing \
    && add-apt-repository ppa:ubuntu-toolchain-r/test \
    && apt-get -y update && apt-get upgrade -y && apt-get install -y --fix-missing \
    pkg-config \
    g++-11 gcc-11 \
    vim \
    git \
    cmake \
    make  \
    wget unzip\
    libgtk2.0-dev \
    libgtk-3-dev \
    libavcodec-dev \
    libavformat-dev \
    libjpeg-dev \
    libswscale-dev \
    libtiff5-dev  \
    curl gdb  \
    rsync \
    ccache htop\
    ssh \
    libgoogle-glog-dev libgflags-dev \
    libatlas-base-dev \
    libeigen3-dev \
    libsuitesparse-dev \
    libcanberra-gtk-module python3 python3-dev python3-numpy python3-pip libssl-dev libpng-dev libwebp-dev libavresample-dev libavutil-dev libopenexr-dev iproute2 can-utils python3-can python3-setuptools && rm -rf /var/lib/apt/lists/*

# 迈德威视
COPY mv_sdk /mv_sdk
RUN mkdir -p /etc/udev/rules.d/ && cd /mv_sdk && ./install.sh && rm -rf /mv_sdk

# fmt安装配置
RUN cd / && git clone https://github.com/fmtlib/fmt.git/ && mkdir fmt/build && cd fmt/build \
	&& cmake .. && make -j 12 && make install && rm -rf /fmt

# spdlog手动安装
RUN cd / && git clone https://github.com/gabime/spdlog.git && mkdir spdlog/build \
    && cd spdlog/build \
	&& cmake .. && make -j 12 && make install && rm -rf /spdlog

# ceres安装（eigen3）
RUN cd / && git clone https://ceres-solver.googlesource.com/ceres-solver && mkdir ceres-solver/ceres-bin/ && cd ceres-solver/ceres-bin && cmake .. && make -j 12 && make install && rm -rf /ceres-solver

# zsh安装与配置
RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.2/zsh-in-docker.sh)" -- \
    -t jispwoso \
    -a HYPHEN_INSENSITIVE="true" \
    -a DISABLE_UNTRACKED_FILES_DIRTY="true" \
    -a COMPLETION_WAITING_DOTS="true" \
    -p git \
    -p z \
    -p colored-man-pages \
    -p sudo \
    -p extract \
    -p copypath \
    -p https://github.com/zsh-users/zsh-autosuggestions \
    -p https://github.com/zsh-users/zsh-syntax-highlighting \
    && chsh -s /usr/bin/zsh

# 设置Eigen库的链接
RUN ln -s /usr/include/eigen3/Eigen /usr/include/Eigen && \
    ln -s /usr/include/eigen3/unsupported /usr/include/unsupported

ENV HTTP_PROXY "" 
ENV HTTPS_PROXY ""
WORKDIR /root   

